apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-parcelize'

apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: "sonar.gradle"
apply from: "jacoco.gradle"

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'es.enylrad.gamesgallery.testing.OpenClass'
}


android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "es.enylrad.gamesgallery"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "es.enylrad.gamesgallery.commons.utils.AppTestRunner"
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary true


        def props = new Properties()
        def propFile = file('api-credentials.properties')
        if (propFile.canRead()) {
            props.load(new FileInputStream(propFile))

            def keyCredentials = 'API-CREDENTIALS'
            if (props != null && props.containsKey(keyCredentials)) {
                def apiCredentials = props[keyCredentials]
                buildConfigField "String", "API_CREDENTIALS", "\"$apiCredentials\""
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true

            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        useIR = true
    }

    buildFeatures {
        dataBinding = true
    }
}


jacoco {
    toolVersion = "$rootProject.jacocoVersion"
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    // Android
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // Room
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Work
    implementation "androidx.work:work-runtime-ktx:$rootProject.workVersion"

    //Paging
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.pagingVersion"

    // LifeCycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifeCycleVersion"

    // Injection
    implementation "io.insert-koin:koin-android:$rootProject.koinVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofitScalarsVersion"

    // OkHttp
    implementation platform("com.squareup.okhttp3:okhttp-bom:$rootProject.okhttpBom")
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$rootProject.firebaseBom")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation "com.google.firebase:firebase-dynamic-links-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-perf-ktx"

    // Play Services
    implementation "com.google.android.gms:play-services-auth:$rootProject.psAuthVersion"

    // Lottie
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"

    // Log in-app
    debugImplementation "com.readystatesoftware.chuck:library:$rootProject.chuckVersion"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$rootProject.chuckVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Circle ImageView
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImgVersion"

    // Test
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mockwebserverVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"

    androidTestImplementation "androidx.test:core:$rootProject.testCoreVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.testRulesVersion"

    androidTestImplementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    androidTestImplementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    androidTestImplementation "com.google.android.material:material:$rootProject.materialVersion"

    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testExtJunit"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
    androidTestImplementation "androidx.work:work-testing:$rootProject.workVersion"

    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoAndroidVersion"
}